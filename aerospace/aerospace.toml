
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

after-startup-command = [
  # JankyBorders has a built-in detection of already running process,
  # so it won't be run twice on AeroSpace restart
  'exec-and-forget borders ax_focus=on style=round width=13.0 hidpi=on active_color=0xffabff4f inactive_color=0x00ffffff',
  'exec-and-forget sketchybar --hotreload',
]

exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  # 'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
  'sketchybar --trigger aerospace_workspace_change AEROSPACE_FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE AEROSPACE_PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
# accordion-padding = 50

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
# on-focus-changed = "move-mouse window-lazy-center"
# on-focus-changed = ['move-mouse window-force-center'] # Mouse lazily follows any focus (window or workspace)


# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = [{ monitor.'Retina' = 0 }, 10]
outer.left = 10
outer.bottom = 10
outer.top = [{ monitor.'Retina' = 0 }, 40]
outer.right = 10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]
cmd-h = []     # Disable "hide application"
cmd-alt-h = [] # Disable "hide others"
cmd-m = []     # Disable "application"

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-1 = 'workspace 1'
alt-shift-1 = 'move-node-to-workspace 1'
alt-2 = 'workspace 2'
alt-shift-2 = 'move-node-to-workspace 2'
# alt-3 = 'workspace 3'
# alt-shift-3 = 'move-node-to-workspace 3'
alt-4 = 'workspace 4'
alt-shift-4 = 'move-node-to-workspace 4'
alt-5 = 'workspace 5'
alt-shift-5 = 'move-node-to-workspace 5'
alt-6 = 'workspace 6'
alt-shift-6 = 'move-node-to-workspace 6'
alt-7 = 'workspace 7'
alt-shift-7 = 'move-node-to-workspace 7'
alt-8 = 'workspace 8'
alt-shift-8 = 'move-node-to-workspace 8'
alt-9 = 'workspace 9'
alt-shift-9 = 'move-node-to-workspace 9'
alt-0 = 'workspace 0'
alt-shift-0 = 'move-node-to-workspace 0'
alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
alt-shift-a = 'move-node-to-workspace A' # In your config, you can drop workspace bindings that you don't need
alt-b = 'workspace B'
alt-shift-b = 'move-node-to-workspace B'
alt-c = 'workspace C'
alt-shift-c = 'move-node-to-workspace C'
alt-d = 'workspace D'
alt-shift-d = 'move-node-to-workspace D'
alt-e = 'workspace E'
alt-shift-e = 'move-node-to-workspace E'
alt-f = 'workspace F'
alt-shift-f = 'move-node-to-workspace F'
alt-g = 'workspace G'
alt-shift-g = 'move-node-to-workspace G'
alt-i = 'workspace I'
alt-shift-i = 'move-node-to-workspace I'
alt-m = 'workspace M'
alt-shift-m = 'move-node-to-workspace M'
alt-n = 'workspace N'
alt-shift-n = 'move-node-to-workspace N'
alt-o = 'workspace O'
alt-shift-o = 'move-node-to-workspace O'
alt-p = 'workspace P'
alt-shift-p = 'move-node-to-workspace P'
# alt-q = 'workspace Q'
# alt-shift-q = 'move-node-to-workspace Q'
alt-r = 'workspace R'
alt-shift-r = 'move-node-to-workspace R'
alt-s = 'workspace S'
alt-shift-s = 'move-node-to-workspace S'
alt-t = 'workspace T'
alt-shift-t = 'move-node-to-workspace T'
alt-u = 'workspace U'
alt-shift-u = 'move-node-to-workspace U'
alt-v = 'workspace V'
alt-shift-v = 'move-node-to-workspace V'
alt-w = 'workspace W'
alt-shift-w = 'move-node-to-workspace W'
alt-x = 'workspace X'
alt-shift-x = 'move-node-to-workspace X'
alt-y = 'workspace Y'
alt-shift-y = 'move-node-to-workspace Y'
alt-z = 'workspace Z'
alt-shift-z = 'move-node-to-workspace Z'

# alt-shift-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-minus = 'resize smart -100'
alt-equal = 'resize smart +100'

[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-id = 'com.google.android.studio'
run = ["move-node-to-workspace A"]

[[on-window-detected]]
if.app-id = 'net.battle.app'
run = ["move-node-to-workspace B"]

[[on-window-detected]]
if.app-id = 'com.cron.electron'
check-further-callbacks = true
run = ["layout tiling", "move-node-to-workspace C"]

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = ["move-node-to-workspace E"]

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = ["move-node-to-workspace F"]

[[on-window-detected]]
if.app-id = 'com.jetbrains.intellij'
run = ["move-node-to-workspace I"]

[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-Elements.Settings'
run = ["move-node-to-workspace M"]

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = ["move-node-to-workspace M"]

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.hpfldicfbfomlpcikngkocigghgafkph'
# if.app-name-regex-substring='Messages'
# if.window-title-regex-substring = 'Messages'
run = ["move-node-to-workspace M"]

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = ["move-node-to-workspace O"]

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ["move-node-to-workspace S"]

[[on-window-detected]]
if.app-id = 'com.valvesoftware.steam'
run = ["layout tiling", "move-node-to-workspace S"]

[[on-window-detected]]
if.app-id = 'com.audible.iphone'
run = ["move-node-to-workspace U"]

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = ["move-node-to-workspace W"]

[[on-window-detected]]
if.app-id = 'com.apple.dt.Xcode'
run = ["move-node-to-workspace X"]

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = ["move-node-to-workspace 1"]

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
if.window-title-regex-substring = 'Picture-in-picture'
run = 'layout floating'
check-further-callbacks = true

# [[on-window-detected]]
# if.app-id = ''
# run = ["move-node-to-workspace "]


# NOTE: If we have any windows that show as float but we expect to be tiled do this
# [[on-window-detected]]
# if.app-id = ''
# check-further-callbacks = true
# run = ["layout tiling"]

[workspace-to-monitor-force-assignment]
C = ['benq', 'built-in', 'thunderbolt', 'secondary', 2]
E = ['benq', 'built-in', 'thunderbolt', 'secondary', 2]
M = ['benq', 'built-in', 'thunderbolt', 'secondary', 2]
O = ['benq', 'built-in', 'thunderbolt', 'secondary', 2]
S = ['benq', 'built-in', 'thunderbolt', 'secondary', 2]
U = ['benq', 'built-in', 'thunderbolt', 'secondary', 2]
W = ['benq', 'built-in', 'thunderbolt', 'secondary', 2]
